.card {
  overflow: hidden;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  border-radius: 16px;
  border: 1px solid var(--color-border);
  box-sizing: border-box;
  transform-origin: center;
  will-change: transform, box-shadow;
  
  // Enhanced blue-themed background with subtle gradient
  background: linear-gradient(135deg, var(--color-bg-card) 0%, var(--color-bg-tertiary) 100%);
  box-shadow: 
    0 4px 12px var(--shadow-color-light),
    0 1px 3px var(--shadow-color);

  // Default padding
  padding: 24px;

  &:hover,
  &.cardHovered {
    transform: translateY(-2px) scale(1.01);
    box-shadow: 
      0 8px 24px var(--shadow-color),
      0 0 0 1px var(--color-border-accent),
      0 0 20px rgba(96, 165, 250, 0.1);
    border-color: var(--color-border-accent);
  }

  &:active {
    transform: translateY(0px) scale(0.99);
  }
}

.description {
  color: var(--color-text-secondary);
  margin: 0 0 16px 0;
  font-size: 14px;
  line-height: 1.5;
  
  // Ensure proper text wrapping
  word-wrap: break-word;
  overflow-wrap: break-word;
  white-space: normal;
}

.cardContent {
  position: relative;
  z-index: 2;
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  color: var(--color-text-primary);
  
  // Remove any text wrapping restrictions
  white-space: normal;
}

.title {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 0 0 12px 0;
  color: var(--color-accent-light);
  
  // Ensure title wraps properly
  word-wrap: break-word;
  overflow-wrap: break-word;
  white-space: normal;
  line-height: 1.3;
}

.gridCard {
  background: linear-gradient(135deg, var(--color-bg-card) 0%, var(--color-bg-elevated) 100%);
  color: var(--color-text-primary);
  border: 1px solid var(--color-border);
  border-radius: 1rem;
  padding: 1.5rem;
  box-shadow: 
    0 4px 12px var(--shadow-color-light),
    0 1px 3px var(--shadow-color);
  margin-bottom: 1.5rem;
  display: grid;
  width: 100%;
  grid-template-columns: repeat(3, 1fr);
  gap: 1.5rem;
  transition: all 0.3s ease;

  &:hover {
    box-shadow: 
      0 8px 24px var(--shadow-color),
      0 0 0 1px var(--color-border-light);
    border-color: var(--color-border-light);
  }

  // Ensure cards fill their grid areas properly
  > * {
    width: 100%;
    height: 100%;
    min-width: 0; // Prevents overflow issues
  }
}

// Status-specific card variants
.card.success {
  border-color: var(--color-success);
  
  &:hover {
    box-shadow: 
      0 8px 24px var(--shadow-color),
      0 0 0 1px var(--color-success),
      0 0 20px rgba(16, 185, 129, 0.1);
  }
}

.card.warning {
  border-color: var(--color-warning);
  
  &:hover {
    box-shadow: 
      0 8px 24px var(--shadow-color),
      0 0 0 1px var(--color-warning),
      0 0 20px rgba(245, 158, 11, 0.1);
  }
}

.card.error {
  border-color: var(--color-error);
  
  &:hover {
    box-shadow: 
      0 8px 24px var(--shadow-color),
      0 0 0 1px var(--color-error),
      0 0 20px rgba(239, 68, 68, 0.1);
  }
}

.card.info {
  border-color: var(--color-info);
  
  &:hover {
    box-shadow: 
      0 8px 24px var(--shadow-color),
      0 0 0 1px var(--color-info),
      0 0 20px rgba(96, 165, 250, 0.1);
  }
}

/* Responsive design for smaller screens */
@media screen and (max-width: 1024px) {
  .gridCard {
    grid-template-columns: repeat(2, 1fr);
    gap: 1.25rem;
  }
}

@media screen and (max-width: 768px) {
  .card {
    padding: 20px;
  }
  
  .gridCard {
    grid-template-columns: 1fr;
    gap: 1rem;
    padding: 1rem;
  }
  
  .title {
    font-size: 1.1rem;
  }
  
  .description {
    font-size: 13px;
  }
}

@media screen and (max-width: 480px) {
  .card {
    padding: 16px;
  }
  
  .gridCard {
    gap: 0.75rem;
    padding: 0.75rem;
  }
  
  .title {
    font-size: 1rem;
  }
}